{"ast":null,"code":"import _classCallCheck from\"/home/kali/CryCru/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/kali/CryCru/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/home/kali/CryCru/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/kali/CryCru/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import moment from'moment';import HighChart from'./HighChart';var cc=require('cryptocompare');cc.setApiKey(process.env.REACT_APP_CRYPTO_COMPARE_API_KEY);var CoinChart=/*#__PURE__*/function(_React$Component){_inherits(CoinChart,_React$Component);var _super=_createSuper(CoinChart);function CoinChart(){var _this;_classCallCheck(this,CoinChart);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={symbol:'',coin:null,iterations:7,interval:1,units:'days',currency:'USD',series:[]};_this.componentDidMount=function(){_this.setState(function(){return{symbol:_this.props.symbol};},function(){return _this.fetchHistorical();});};_this.componentDidUpdate=function(){if(_this.state.symbol!==_this.props.symbol){_this.setState(function(){return{symbol:_this.props.symbol,series:[]};},function(){return _this.fetchHistorical();});}};_this.fetchHistorical=function(){_this.historical([],_this.state.iterations);};_this.historical=function(prices,iterations){var point=moment().subtract(_this.state.interval*iterations,_this.state.units);cc.priceHistorical(_this.state.symbol,[_this.state.currency],new Date(point)).then(function(price){prices.push([point.valueOf(),price[_this.state.currency]]);if(iterations>0){_this.historical(prices,iterations-1);}else{_this.setState(function(){return{series:[{data:prices,showInLegend:false}]};});}});};_this.changeChartSelect=function(e){if(e.target.value==='week'){_this.setState(function(){return{iterations:7,interval:1,units:'days',series:[]};},function(){return _this.fetchHistorical();});}else if(e.target.value==='month'){_this.setState(function(){return{iterations:30,interval:1,units:'days',series:[]};},function(){return _this.fetchHistorical();});}else if(e.target.value==='year'){_this.setState(function(){return{iterations:73,interval:5,units:'days',series:[]};},function(){return _this.fetchHistorical();});}};return _this;}_createClass(CoinChart,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(HighChart,{title:this.props.title,series:this.state.series,changeChartSelect:this.changeChartSelect});}}]);return CoinChart;}(React.Component);export default CoinChart;","map":{"version":3,"sources":["/home/kali/CryCru/src/components/CoinChart.js"],"names":["React","moment","HighChart","cc","require","setApiKey","process","env","REACT_APP_CRYPTO_COMPARE_API_KEY","CoinChart","state","symbol","coin","iterations","interval","units","currency","series","componentDidMount","setState","props","fetchHistorical","componentDidUpdate","historical","prices","point","subtract","priceHistorical","Date","then","price","push","valueOf","data","showInLegend","changeChartSelect","e","target","value","title","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport moment from 'moment'\nimport HighChart from './HighChart'\n\nconst cc = require('cryptocompare')\ncc.setApiKey(process.env.REACT_APP_CRYPTO_COMPARE_API_KEY)\n\nclass CoinChart extends React.Component {\n  state = {\n    symbol: '',\n    coin: null,\n    iterations: 7,\n    interval: 1,\n    units: 'days',\n    currency: 'USD',  \n    series: []\n  }\n  componentDidMount = () => {\n    this.setState(() => ({ symbol: this.props.symbol }), () => this.fetchHistorical())\n  }\n  componentDidUpdate = () => {\n    if (this.state.symbol !== this.props.symbol) {\n      this.setState(() => ({\n        symbol: this.props.symbol,\n        series: []\n      }), () => this.fetchHistorical())\n    }\n  }\n  fetchHistorical = () => {\n    this.historical([], this.state.iterations);\n  }\n  historical = (prices, iterations) => {\n    const point = moment().subtract(this.state.interval * iterations, this.state.units)\n    cc.priceHistorical(this.state.symbol, [this.state.currency], new Date(point))\n      .then(price => {\n        prices.push([point.valueOf(), price[this.state.currency]])\n        if (iterations > 0) {\n          this.historical(prices, iterations - 1)\n        } else {\n          this.setState(() => ({\n            series: [{\n              data: prices,\n              showInLegend: false\n            }]\n          }))\n        }\n    })\n  }\n  changeChartSelect = (e) => {\n    if (e.target.value === 'week') {\n      this.setState(() => ({\n        iterations: 7,\n        interval: 1,\n        units: 'days',  \n        series: []\n      }), () => this.fetchHistorical())\n    } else if (e.target.value === 'month') {\n      this.setState(() => ({\n        iterations: 30,\n        interval: 1,\n        units: 'days',  \n        series: []\n      }), () => this.fetchHistorical())\n    } else if (e.target.value === 'year') {\n      this.setState(() => ({\n        iterations: 73,\n        interval: 5,\n        units: 'days',  \n        series: []\n      }), () => this.fetchHistorical())\n    }\n    \n  }\n  render() {\n    return (\n      <HighChart title={this.props.title} series={this.state.series} changeChartSelect={this.changeChartSelect}></HighChart>\n    )\n  }\n}\n\nexport default CoinChart"]},"metadata":{},"sourceType":"module"}