{"ast":null,"code":"import _slicedToArray from\"/home/kali/demo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import moment from'moment';var cc=require('cryptocompare');cc.setApiKey(process.env.REACT_APP_CRYPTO_COMPARE_API_KEY);var CoinNews=function CoinNews(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),news=_useState2[0],setNews=_useState2[1];if(news.length===0){cc.newsList('EN',{categories:[props.categories]}).then(function(newsList){setNews(newsList.slice(0,props.results));}).catch(console.error);}return/*#__PURE__*/React.createElement(\"div\",{className:\"news-list\"},news.map(function(story){var now=moment();var published=moment(story.published_on*1000);var secondsAgo=now.diff(published)/1000;return/*#__PURE__*/React.createElement(\"div\",{key:story.id,className:\"news-list__story\"},/*#__PURE__*/React.createElement(\"div\",{className:\"news-list__title\"},/*#__PURE__*/React.createElement(\"a\",{href:story.url,target:\"_blank\",rel:\"noreferrer noopener\"},story.title)),props.showBody&&/*#__PURE__*/React.createElement(\"div\",{className:\"news-list__subtitle\"},story.body),/*#__PURE__*/React.createElement(\"div\",{className:\"news-list__subtitle\"},secondsAgo<60?/*#__PURE__*/React.createElement(\"span\",null,\"< 1 min\"):secondsAgo<3600?Math.round(secondsAgo/60)===1?/*#__PURE__*/React.createElement(\"span\",null,\"1 min\"):/*#__PURE__*/React.createElement(\"span\",null,Math.round(secondsAgo/60),\" mins\"):secondsAgo<86400?Math.round(secondsAgo/3600)===1?/*#__PURE__*/React.createElement(\"span\",null,\"1 hour\"):/*#__PURE__*/React.createElement(\"span\",null,Math.round(secondsAgo/3600),\" hours\"):Math.round(secondsAgo/86400)===1?/*#__PURE__*/React.createElement(\"span\",null,\"1 day\"):/*#__PURE__*/React.createElement(\"span\",null,Math.round(secondsAgo/86400),\" days\"),\" ago\"));}));};export default CoinNews;","map":{"version":3,"sources":["/home/kali/demo/src/components/CoinNews.js"],"names":["React","useState","moment","cc","require","setApiKey","process","env","REACT_APP_CRYPTO_COMPARE_API_KEY","CoinNews","props","news","setNews","length","newsList","categories","then","slice","results","catch","console","error","map","story","now","published","published_on","secondsAgo","diff","id","url","title","showBody","body","Math","round"],"mappings":"kGAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CAEA,GAAMC,CAAAA,EAAE,CAAGC,OAAO,CAAC,eAAD,CAAlB,CACAD,EAAE,CAACE,SAAH,CAAaC,OAAO,CAACC,GAAR,CAAYC,gCAAzB,EAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,eACFT,QAAQ,CAAC,EAAD,CADN,wCACnBU,IADmB,eACbC,OADa,eAG1B,GAAGD,IAAI,CAACE,MAAL,GAAgB,CAAnB,CAAsB,CACpBV,EAAE,CAACW,QAAH,CAAY,IAAZ,CAAkB,CAAEC,UAAU,CAAE,CAACL,KAAK,CAACK,UAAP,CAAd,CAAlB,EACCC,IADD,CACM,SAAAF,QAAQ,CAAI,CAChBF,OAAO,CAACE,QAAQ,CAACG,KAAT,CAAe,CAAf,CAAkBP,KAAK,CAACQ,OAAxB,CAAD,CAAP,CACD,CAHD,EAGGC,KAHH,CAGSC,OAAO,CAACC,KAHjB,EAID,CACD,mBACE,2BAAK,SAAS,CAAC,WAAf,EACGV,IAAI,CAACW,GAAL,CAAS,SAAAC,KAAK,CAAI,CACjB,GAAMC,CAAAA,GAAG,CAAGtB,MAAM,EAAlB,CACA,GAAMuB,CAAAA,SAAS,CAAGvB,MAAM,CAACqB,KAAK,CAACG,YAAN,CAAqB,IAAtB,CAAxB,CACA,GAAMC,CAAAA,UAAU,CAAGH,GAAG,CAACI,IAAJ,CAASH,SAAT,EAAsB,IAAzC,CACA,mBACE,2BAAK,GAAG,CAAEF,KAAK,CAACM,EAAhB,CAAoB,SAAS,CAAC,kBAA9B,eACE,2BAAK,SAAS,CAAC,kBAAf,eAAkC,yBAAG,IAAI,CAAEN,KAAK,CAACO,GAAf,CAAoB,MAAM,CAAC,QAA3B,CAAoC,GAAG,CAAC,qBAAxC,EAA+DP,KAAK,CAACQ,KAArE,CAAlC,CADF,CAEGrB,KAAK,CAACsB,QAAN,eAAkB,2BAAK,SAAS,CAAC,qBAAf,EAAsCT,KAAK,CAACU,IAA5C,CAFrB,cAGE,2BAAK,SAAS,CAAC,qBAAf,EACGN,UAAU,CAAG,EAAb,cACC,0CADD,CAGCA,UAAU,CAAG,IAAb,CACEO,IAAI,CAACC,KAAL,CAAWR,UAAU,CAAG,EAAxB,IAAgC,CAAhC,cACE,wCADF,cAGE,gCAAOO,IAAI,CAACC,KAAL,CAAWR,UAAU,CAAG,EAAxB,CAAP,SAJJ,CAOEA,UAAU,CAAG,KAAb,CACEO,IAAI,CAACC,KAAL,CAAWR,UAAU,CAAG,IAAxB,IAAkC,CAAlC,cACE,yCADF,cAGE,gCAAOO,IAAI,CAACC,KAAL,CAAWR,UAAU,CAAG,IAAxB,CAAP,UAJJ,CAOEO,IAAI,CAACC,KAAL,CAAWR,UAAU,CAAG,KAAxB,IAAmC,CAAnC,cACE,wCADF,cAGE,gCAAOO,IAAI,CAACC,KAAL,CAAWR,UAAU,CAAG,KAAxB,CAAP,SArBV,QAHF,CADF,CAmCD,CAvCA,CADH,CADF,CA4CD,CArDD,CAuDA,cAAelB,CAAAA,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport moment from 'moment'\n\nconst cc = require('cryptocompare')\ncc.setApiKey(process.env.REACT_APP_CRYPTO_COMPARE_API_KEY)\n\nconst CoinNews = (props) => {\n  const [news, setNews] = useState([])\n\n  if(news.length === 0) {\n    cc.newsList('EN', { categories: [props.categories] })\n    .then(newsList => {\n      setNews(newsList.slice(0, props.results))\n    }).catch(console.error)\n  }\n  return (\n    <div className=\"news-list\">\n      {news.map(story => {\n        const now = moment()\n        const published = moment(story.published_on * 1000)\n        const secondsAgo = now.diff(published) / 1000\n        return (\n          <div key={story.id} className=\"news-list__story\">\n            <div className=\"news-list__title\"><a href={story.url} target=\"_blank\" rel='noreferrer noopener'>{story.title}</a></div>\n            {props.showBody && <div className=\"news-list__subtitle\">{story.body}</div>}\n            <div className=\"news-list__subtitle\">\n              {secondsAgo < 60 ? (\n                <span>&lt; 1 min</span>\n              ) : (\n                secondsAgo < 3600 ? (\n                  Math.round(secondsAgo / 60) === 1 ? (\n                    <span>1 min</span>\n                  ) : (\n                    <span>{Math.round(secondsAgo / 60)} mins</span>\n                  )\n                ) : (\n                  secondsAgo < 86400 ? (\n                    Math.round(secondsAgo / 3600) === 1 ? (\n                      <span>1 hour</span>\n                    ) : (\n                      <span>{Math.round(secondsAgo / 3600)} hours</span>\n                    )\n                  ) : (\n                    Math.round(secondsAgo / 86400) === 1 ? (\n                      <span>1 day</span>\n                    ) : (\n                      <span>{Math.round(secondsAgo / 86400)} days</span>\n                    )\n                  )\n                )\n              )\n              \n              } ago\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default CoinNews\n\n\n"]},"metadata":{},"sourceType":"module"}