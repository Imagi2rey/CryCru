{"ast":null,"code":"import _classCallCheck from\"/home/kali/demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/kali/demo/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/kali/demo/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"/home/kali/demo/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/kali/demo/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import moment from'moment';import{FaCircleNotch,FaBitcoin,FaSync,FaCaretUp,FaCaretDown,FaCaretLeft}from'react-icons/fa';import{setCoins as _setCoins,editCoin as _editCoin}from'../actions/coins';import{setFavorites as _setFavorites}from'../actions/favorites';import{updatePriceInfo as _updatePriceInfo}from'../actions/price-info';import{history}from'../routers/AppRouter';import CoinChart from'./CoinChart';import CoinDetails from'./CoinDetails';import CoinNews from'./CoinNews';import{formatNumber}from'../utilities/numbers';var cc=require('cryptocompare');cc.setApiKey(process.env.REACT_APP_CRYPTO_COMPARE_API_KEY);// this.props.editCoin('BTCD', { price: 123.45 })\nexport var DashboardPage=/*#__PURE__*/function(_React$Component){_inherits(DashboardPage,_React$Component);var _super=_createSuper(DashboardPage);function DashboardPage(props){var _this;_classCallCheck(this,DashboardPage);_this=_super.call(this,props);_this.componentDidMount=function(){if(_this.props.favorites.length===0){history.push('/settings');}else{var currentFavorite='';if(localStorage.getItem('cryptodashCurrentFavorite')){currentFavorite=localStorage.getItem('cryptodashCurrentFavorite');}else{currentFavorite=_this.props.favorites[0];localStorage.setItem('cryptodashCurrentFavorite',currentFavorite);}_this.setState(function(){return{currentFavorite:currentFavorite};});}};_this.componentDidUpdate=function(){if(_this.props.coins.length>0&&!_this.props.priceInfo.faves){_this.handleUpdatePrices();}};_this.componentWillUnmount=function(){clearTimeout(_this.timer);};_this.handleUpdatePrices=function(){_this.updatePrices();_this.props.updatePriceInfo({faves:true,favesLastUpdated:moment().valueOf()});};_this.updatePrices=function(){var currency='USD';var favoriteSymbols=_this.props.coins.filter(function(coin){return _this.props.favorites.includes(coin.symbol);}).map(function(coin){return coin.symbol;});document.getElementById('refresh-prices-icon').classList.add('fa-spin');cc.priceFull(favoriteSymbols,[currency]).then(function(prices){Object.keys(prices).forEach(function(i){var self=_assertThisInitialized(_this);_this.timer=setTimeout(function(){self.props.editCoin(i,{priceFetched:true,price:prices[i][currency].PRICE,changeDay:prices[i][currency].CHANGEDAY,changePctDay:prices[i][currency].CHANGEPCTDAY,mktCap:prices[i][currency].MKTCAP,totalVol24hr:prices[i][currency].VOLUMEDAY,supply:prices[i][currency].SUPPLY,high24hr:prices[i][currency].HIGH24HOUR,low24hr:prices[i][currency].LOW24HOUR});self.props.updatePriceInfo({faves:true,favesLastUpdated:moment().valueOf()});document.getElementById('refresh-prices-icon').classList.remove('fa-spin');},300);});}).catch(console.error);};_this.handleCurrentFavorite=function(e){var currentFavorite=e.target.id;_this.setState(function(){return{currentFavorite:currentFavorite};});localStorage.setItem('cryptodashCurrentFavorite',currentFavorite);};_this.state={prices:[],currentFavorite:null};_this.timer=null;return _this;}_createClass(DashboardPage,[{key:\"render\",value:function render(){var _this2=this;var favoriteCoins=this.props.coins.filter(function(coin){return _this2.props.favorites.includes(coin.symbol);});var currentCoin=favoriteCoins.filter(function(coin){return coin.symbol===_this2.state.currentFavorite;})[0];return/*#__PURE__*/React.createElement(\"div\",{className:\"content-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"dashboard\"},/*#__PURE__*/React.createElement(\"div\",{className:\"updater\"},/*#__PURE__*/React.createElement(\"div\",{className:\"updater__last-updated\"},\"Last Updated:\",/*#__PURE__*/React.createElement(\"span\",{className:\"updater__time\"},this.props.priceInfo.favesLastUpdated&&moment(this.props.priceInfo.favesLastUpdated).format('HH:mm'))),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"updater__button\",onClick:this.updatePrices},/*#__PURE__*/React.createElement(FaSync,{size:\"1rem\",id:\"refresh-prices-icon\"}),\"Refresh Prices\")),/*#__PURE__*/React.createElement(\"div\",{className:\"fave-list\"},favoriteCoins.length>0?favoriteCoins.map(function(coin){var tileClass='fave-tile';if(coin.symbol===_this2.state.currentFavorite){tileClass+=' fave-tile--currentFave';}return/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:tileClass,key:coin.symbol,id:coin.symbol,title:\"View coin details\",onClick:_this2.handleCurrentFavorite},/*#__PURE__*/React.createElement(\"div\",{className:\"fave-tile__overview\"},/*#__PURE__*/React.createElement(\"div\",{className:\"fave-tile__logo\"},coin.imageUrl?/*#__PURE__*/React.createElement(\"img\",{src:\"http://cryptocompare.com/\".concat(coin.imageUrl),alt:\"coin logo\"}):/*#__PURE__*/React.createElement(FaBitcoin,{size:\"3.2rem\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"fave-tile__name\"},coin.name),/*#__PURE__*/React.createElement(\"span\",{className:\"fave-tile__symbol\"},coin.symbol)),/*#__PURE__*/React.createElement(\"div\",{className:\"fave-tile__price\"},coin.price?coin.changeDay>0?/*#__PURE__*/React.createElement(\"span\",{className:\"green-text\"},/*#__PURE__*/React.createElement(\"span\",{className:\"light-text\"},\"$\"),coin.price>=.01?formatNumber(coin.price.toFixed(2)):formatNumber(coin.price.toFixed(5)),/*#__PURE__*/React.createElement(FaCaretUp,{size:\"1.6rem\"})):coin.changeDay<0?/*#__PURE__*/React.createElement(\"span\",{className:\"red-text\"},/*#__PURE__*/React.createElement(\"span\",{className:\"light-text\"},\"$\"),coin.price>=.01?formatNumber(coin.price.toFixed(2)):formatNumber(coin.price.toFixed(5)),/*#__PURE__*/React.createElement(FaCaretDown,{size:\"1.6rem\"})):/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"light-text\"},\"$\"),coin.price>=.01?formatNumber(coin.price.toFixed(2)):formatNumber(coin.price.toFixed(5)),/*#__PURE__*/React.createElement(FaCaretLeft,{size:\"1.6rem\"})):'no data'));}):/*#__PURE__*/React.createElement(\"div\",{className:\"loading__notificaton\"},\"Loading coin data\",/*#__PURE__*/React.createElement(FaCircleNotch,{size:\"2.4rem\",className:\"fa-spin\"}))),favoriteCoins.length>0&&this.state.currentFavorite&&/*#__PURE__*/React.createElement(\"div\",{className:\"coin__chart\"},/*#__PURE__*/React.createElement(CoinChart,{symbol:this.state.currentFavorite,title:favoriteCoins.filter(function(coin){return coin.symbol===_this2.state.currentFavorite;})[0].name}),/*#__PURE__*/React.createElement(CoinDetails,{coin:currentCoin})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Recent News\"),favoriteCoins.length>0&&/*#__PURE__*/React.createElement(CoinNews,{categories:this.props.favorites,showBody:true,results:10}))));}}]);return DashboardPage;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{coins:state.coins,favorites:state.favorites,priceInfo:state.priceInfo};};var mapDispatchToProps=function mapDispatchToProps(dispatch,props){return{setCoins:function setCoins(coins){return dispatch(_setCoins(coins));},editCoin:function editCoin(symbol,updates){return dispatch(_editCoin(symbol,updates));},setFavorites:function setFavorites(favorites){return dispatch(_setFavorites(favorites));},updatePriceInfo:function updatePriceInfo(lastUpdated){return dispatch(_updatePriceInfo(lastUpdated));}};};export default connect(mapStateToProps,mapDispatchToProps)(DashboardPage);","map":{"version":3,"sources":["/home/kali/demo/src/components/DashboardPage.js"],"names":["React","connect","moment","FaCircleNotch","FaBitcoin","FaSync","FaCaretUp","FaCaretDown","FaCaretLeft","setCoins","editCoin","setFavorites","updatePriceInfo","history","CoinChart","CoinDetails","CoinNews","formatNumber","cc","require","setApiKey","process","env","REACT_APP_CRYPTO_COMPARE_API_KEY","DashboardPage","props","componentDidMount","favorites","length","push","currentFavorite","localStorage","getItem","setItem","setState","componentDidUpdate","coins","priceInfo","faves","handleUpdatePrices","componentWillUnmount","clearTimeout","timer","updatePrices","favesLastUpdated","valueOf","currency","favoriteSymbols","filter","coin","includes","symbol","map","document","getElementById","classList","add","priceFull","then","prices","Object","keys","forEach","i","self","setTimeout","priceFetched","price","PRICE","changeDay","CHANGEDAY","changePctDay","CHANGEPCTDAY","mktCap","MKTCAP","totalVol24hr","VOLUMEDAY","supply","SUPPLY","high24hr","HIGH24HOUR","low24hr","LOW24HOUR","remove","catch","console","error","handleCurrentFavorite","e","target","id","state","favoriteCoins","currentCoin","format","tileClass","imageUrl","name","toFixed","Component","mapStateToProps","mapDispatchToProps","dispatch","updates","lastUpdated"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport { FaCircleNotch, FaBitcoin, FaSync, FaCaretUp, FaCaretDown, FaCaretLeft } from 'react-icons/fa'\nimport { setCoins, editCoin } from '../actions/coins'\nimport { setFavorites } from '../actions/favorites'\nimport { updatePriceInfo } from '../actions/price-info'\nimport { history } from '../routers/AppRouter'\nimport CoinChart from './CoinChart'\nimport CoinDetails from './CoinDetails'\nimport CoinNews from './CoinNews'\nimport { formatNumber } from '../utilities/numbers'\n\nconst cc = require('cryptocompare')\ncc.setApiKey(process.env.REACT_APP_CRYPTO_COMPARE_API_KEY)\n\n\n// this.props.editCoin('BTCD', { price: 123.45 })\n\nexport class DashboardPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      prices: [],\n      currentFavorite: null\n    }\n    this.timer = null\n  }\n  componentDidMount = () => {\n    if (this.props.favorites.length === 0) {\n      history.push('/settings')\n    } else {\n      let currentFavorite = ''\n      if (localStorage.getItem('cryptodashCurrentFavorite')) {\n        currentFavorite = localStorage.getItem('cryptodashCurrentFavorite')\n      } else {\n        currentFavorite = this.props.favorites[0]\n        localStorage.setItem('cryptodashCurrentFavorite', currentFavorite)\n      }\n      this.setState(() => ({ currentFavorite }))\n    }\n  }\n  componentDidUpdate = () => {\n    if(this.props.coins.length > 0 && !this.props.priceInfo.faves) {\n      this.handleUpdatePrices()\n    }\n  }\n  componentWillUnmount = () => {\n    clearTimeout(this.timer)\n  }\n  handleUpdatePrices = () => {\n    this.updatePrices()\n    this.props.updatePriceInfo({\n      faves: true,\n      favesLastUpdated: moment().valueOf()\n    })\n  }\n  updatePrices = () => {\n    const currency = 'USD';\n    const favoriteSymbols = this.props.coins.filter(coin => this.props.favorites.includes(coin.symbol)).map(coin => coin.symbol)\n    document.getElementById('refresh-prices-icon').classList.add('fa-spin')\n    cc.priceFull(favoriteSymbols, [currency]).then(prices => {\n      Object.keys(prices).forEach(i => {\n        const self = this\n        this.timer = setTimeout(function() {\n          self.props.editCoin(i, {\n            priceFetched: true,\n            price: prices[i][currency].PRICE,\n            changeDay: prices[i][currency].CHANGEDAY,\n            changePctDay: prices[i][currency].CHANGEPCTDAY,\n            mktCap: prices[i][currency].MKTCAP,\n            totalVol24hr: prices[i][currency].VOLUMEDAY,\n            supply: prices[i][currency].SUPPLY,\n            high24hr: prices[i][currency].HIGH24HOUR,\n            low24hr: prices[i][currency].LOW24HOUR\n          })\n          self.props.updatePriceInfo({\n            faves: true,\n            favesLastUpdated: moment().valueOf()\n          })\n          document.getElementById('refresh-prices-icon').classList.remove('fa-spin')\n        }, 300);\n      })\n    }).catch(console.error)\n  }\n  handleCurrentFavorite = (e) => {\n    const currentFavorite = e.target.id\n    this.setState(() => ({ currentFavorite }))\n    localStorage.setItem('cryptodashCurrentFavorite', currentFavorite)\n  }\n  render() {\n    const favoriteCoins = this.props.coins.filter(coin => this.props.favorites.includes(coin.symbol))\n    const currentCoin = favoriteCoins.filter(coin => coin.symbol === this.state.currentFavorite)[0]\n    return (\n      <div className='content-container'>\n        <div className=\"dashboard\">\n          <div className=\"updater\">\n            <div className=\"updater__last-updated\">\n              Last Updated:\n              <span className=\"updater__time\">\n                {this.props.priceInfo.favesLastUpdated && moment(this.props.priceInfo.favesLastUpdated).format('HH:mm')}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"updater__button\"\n              onClick={this.updatePrices}\n            >\n              <FaSync size=\"1rem\" id=\"refresh-prices-icon\" />Refresh Prices\n            </button>\n          </div>\n          <div className=\"fave-list\">\n            {favoriteCoins.length > 0 ? (\n              favoriteCoins.map(coin => {\n                let tileClass = 'fave-tile'\n                if (coin.symbol === this.state.currentFavorite) {\n                  tileClass += ' fave-tile--currentFave'\n                }\n                return (\n                  <button\n                    type=\"button\"\n                    className={tileClass}\n                    key={coin.symbol}\n                    id={coin.symbol}\n                    title='View coin details'\n                    onClick={this.handleCurrentFavorite}\n                  >\n                    <div className=\"fave-tile__overview\">\n                      <div className=\"fave-tile__logo\">\n                        {coin.imageUrl ? (\n                          <img src={`http://cryptocompare.com/${coin.imageUrl}`} alt=\"coin logo\" />\n                          ) : (\n                            <FaBitcoin size=\"3.2rem\" />\n                        )}\n                      </div>\n                      <span className=\"fave-tile__name\">{coin.name}</span>\n                      <span className=\"fave-tile__symbol\">{coin.symbol}</span>\n                    </div>\n                    <div className=\"fave-tile__price\">\n                      {coin.price ? (\n                        coin.changeDay > 0 ? (\n                          <span className=\"green-text\">\n                            <span className=\"light-text\">$</span>\n                            {coin.price >= .01 ? formatNumber(coin.price.toFixed(2)) : formatNumber(coin.price.toFixed(5))}\n                            <FaCaretUp size=\"1.6rem\" />\n                          </span>\n                        ) : (\n                          coin.changeDay < 0 ? (\n                            <span className=\"red-text\">\n                              <span className=\"light-text\">$</span>\n                              {coin.price >= .01 ? formatNumber(coin.price.toFixed(2)) : formatNumber(coin.price.toFixed(5))}\n                              <FaCaretDown size=\"1.6rem\" />\n                            </span>\n                          ) : (\n                            <span>\n                              <span className=\"light-text\">$</span>\n                              {coin.price >= .01 ? formatNumber(coin.price.toFixed(2)) : formatNumber(coin.price.toFixed(5))}\n                              <FaCaretLeft size=\"1.6rem\" />\n                            </span>\n                          )\n                        )\n                      ) : 'no data'}\n                    </div>\n                  </button>\n                )\n              }\n              )\n            ) : (\n              <div className=\"loading__notificaton\">Loading coin data<FaCircleNotch size=\"2.4rem\" className=\"fa-spin\" /></div>\n            )}\n          </div>\n          {(favoriteCoins.length > 0 && this.state.currentFavorite) && \n            <div className=\"coin__chart\">\n              <CoinChart symbol={this.state.currentFavorite} title={favoriteCoins.filter(coin => coin.symbol === this.state.currentFavorite)[0].name} />\n              <CoinDetails coin={currentCoin} />\n            </div>\n          }\n          <div>\n            <h2>Recent News</h2>\n            {favoriteCoins.length > 0 && <CoinNews categories={this.props.favorites} showBody={true} results={10} />}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  coins: state.coins,\n  favorites: state.favorites,\n  priceInfo: state.priceInfo\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  setCoins: (coins) => dispatch(setCoins(coins)),\n  editCoin: (symbol, updates) => dispatch(editCoin(symbol, updates)),\n  setFavorites: (favorites) => dispatch(setFavorites(favorites)),\n  updatePriceInfo: (lastUpdated) => dispatch(updatePriceInfo(lastUpdated))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardPage)\n"]},"metadata":{},"sourceType":"module"}